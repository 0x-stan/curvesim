name: Sim Request

on:
  issues:
    types: [labeled, edited]

jobs:
  build:
    if: contains(github.event.issue.labels.*.name, 'sim request')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        # with:
        #   ref: '8f63eb1612a7fd3b6e6182ea7db8a863ff7c4478'

      - name: Set up latest Python
        uses: actions/setup-python@v4
        with:
          python-version: "*"
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      # - name: View the github context
      #   env:
      #     GITHUB_CONTEXT: ${{ toJson(github) }}
      #   run: |
      #     echo "$GITHUB_CONTEXT"

      - name: Checkout branch for results
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git config --add --bool push.autoSetupRemote true
          BRANCH=sim-request-${{ github.event.issue.number }}; \
          if `git ls-remote --exit-code --heads origin $BRANCH`; then \
            git fetch origin $BRANCH; \
            echo "Checking out existing branch..."; \
            git checkout $BRANCH; \
          else \
            echo "Checking out new branch..."; \
            git checkout -b $BRANCH; \
          fi

      - name: Run pool simulation
        env:
          BODY: ${{ github.event.issue.body }}
        run: |
          # will extract settings from BODY env var
          python3 .github/workflows/parse_sim_request.py > sim_settings.json
          python3 .github/workflows/run_sim_request.py < sim_settings.json

      - name: Save results
        run: |
          git add .
          git commit -m "Commit sim results - GH run ID: ${{ github.run_id }}"
          git push
